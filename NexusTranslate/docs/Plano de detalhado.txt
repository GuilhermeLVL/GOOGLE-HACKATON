Documento 2: Plano de Ação, Tecnologias e Regras do Hackathon
(Use este documento como referência ou cole partes dele quando for pedir uma funcionalidade específica)

ASSUNTO: Plano de Desenvolvimento Técnico para o Projeto "NexusTranslate"

Este documento detalha as fases de desenvolvimento, as tecnologias a serem usadas em cada etapa e as regras do "Google Chrome Built-in AI Challenge 2025" que devemos seguir rigorosamente.

1. Resumo das Regras do Hackathon (Restrições Obrigatórias):

Projeto Novo e Original: A ideia e o código devem ser novos para este evento.

Uso Obrigatório das APIs: A aplicação DEVE usar uma ou mais das APIs de IA incorporadas do Chrome (Prompt, Translator, Summarizer, etc.).

Submissão Completa: Devemos entregar:

A aplicação funcional (link público).

Um repositório público no GitHub com licença open-source.

Uma descrição em texto explicando o projeto, o problema resolvido e as APIs usadas.

Um vídeo de demonstração de até 3 minutos.

2. Stack Tecnológica Confirmada:

Core: React com TypeScript, usando Vite.

APIs do Chrome a serem usadas: Prompt API (para transcrição de áudio e chat), Translator API (para tradução). Poderemos usar a Summarizer API como uma função bônus no chatbot.

Controle de Estado (se necessário): Zustand ou Context API. Evitar Redux por ser excessivo para este escopo.

3. Plano de Desenvolvimento por Fases (Roadmap de Implementação):

Fase	Tarefa Principal	Tecnologias / APIs Chave	Prioridade
0	Setup do Projeto	npm create vite, git, GitHub, Vercel	Crítica
Criar repositório público com licença MIT. Iniciar projeto React+TS. Configurar deploy contínuo na Vercel.		
1	UI/UX Básico e Controles	React, CSS Modules/Tailwind	Alta
Criar os componentes visuais estáticos: Header, Controls (com botões de Iniciar/Parar e seletor de idioma), TranscriptView, ChatWindow.		
2	Captura e Transcrição do Microfone	navigator.mediaDevices.getUserMedia, Prompt API (áudio)	Crítica
Implementar a lógica para solicitar permissão do microfone, iniciar a captura de áudio e exibir a transcrição em tempo real na TranscriptView.		
3.A	Prova de Conceito: Captura de Áudio do Sistema	navigator.mediaDevices.getDisplayMedia	Média
Pesquisar e implementar a captura de áudio da aba/sistema. Se for muito complexo, esta funcionalidade pode ser simplificada ou removida para o MVP.		
3.B	Implementação da Tradução	Translator API	Alta
Adicionar a lógica ao seletor de idioma e ao botão de alternância para traduzir o texto transcrito em tempo real usando a API.		
**4. **	Assistente de IA Contextual (Chatbot)	Prompt API (texto), Gerenciamento de estado (Zustand)	Alta
Implementar a ChatWindow. Criar a lógica que formata o histórico da transcrição como contexto e o envia para a Prompt API para obter respostas.		
5	Funcionalidades de Suporte e Polimento	JavaScript/React	Média
Implementar os botões "Copiar Transcrição" e "Limpar Sessão". Refinar o CSS e garantir a responsividade básica.		
6	Preparação para Submissão	README.md, Ferramenta de gravação de tela	Crítica
Escrever um README.md detalhado. Gravar o vídeo de demonstração de 3 minutos. Revisar todos os requisitos de submissão.		

Exportar para as Planilhas
